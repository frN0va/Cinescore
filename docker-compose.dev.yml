services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    container_name: cinescore-api-dev
    volumes:
      - ./api:/app
    environment:
      - ENVIRONMENT=development
      - RUST_LOG=api=debug
    ports:
      - "8000:8000"
    command: cargo watch -x "run -- --bind 0.0.0.0 --port 8000"
    tty: true
    depends_on:
      - database

  frontend:
    build:
      context: ./cinescore
      dockerfile: Dockerfile.dev
    container_name: cinescore-frontend-dev
    volumes:
      - ./cinescore:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    command: npm run dev -- --host

  database:
    image: postgres:16-alpine
    container_name: cinescore-db-dev
    restart: always
    environment:
      POSTGRES_USER: cinescore
      POSTGRES_PASSWORD: cinescore
      POSTGRES_DB: cinescore
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  nginx:
    image: nginx:stable-alpine
    container_name: cinescore-nginx-dev
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - api

volumes:
  pg_data:
